/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package visao;

import controle.UsuarioDaoArquivo;
import excecao.FormularioException;
import java.text.SimpleDateFormat;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import modelo.Movimentacao;
import modelo.Usuario;
import org.jfree.chart.ChartFactory;
import org.jfree.chart.ChartFrame;
import org.jfree.chart.JFreeChart;
import org.jfree.data.general.DefaultPieDataset;

/**
 *
 * @author glaykiere
 */
public class TelaGerenciarFinancas extends javax.swing.JFrame {
    private Usuario u;
    private UsuarioDaoArquivo dao;
    private Movimentacao m;
    private float valorEntrada;
    private float valorSaida;

    /**
     * Creates new form TelaGerenciarFinancas
     */
    public TelaGerenciarFinancas() {
        initComponents();
        dao = new UsuarioDaoArquivo();
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jButton1 = new javax.swing.JButton();
        jDateChooser1 = new com.toedter.calendar.JDateChooser();
        jDateChooser2 = new com.toedter.calendar.JDateChooser();
        jButton2 = new javax.swing.JButton();
        botaoGerarTabela = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Tela de Gerenciamento de Finanças");
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
            public void windowClosed(java.awt.event.WindowEvent evt) {
                formWindowClosed(evt);
            }
        });

        jLabel1.setText("Data Inicial");

        jLabel2.setText("Data Final");

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Data", "Descrição", "Tipo", "Valor"
            }
        ));
        jScrollPane1.setViewportView(jTable1);

        jButton1.setText("Gerar Gráfico");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jDateChooser1.setDateFormatString("dd/MM/yyyy");

        jDateChooser2.setDateFormatString("dd/MM/yyyy");

        jButton2.setText("Atualizar Movimentacao");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        botaoGerarTabela.setText("Gerar");
        botaoGerarTabela.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botaoGerarTabelaActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(59, 59, 59)
                        .addComponent(jButton2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jButton1)
                        .addContainerGap(160, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel1)
                                .addGap(18, 18, 18)
                                .addComponent(jDateChooser1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel2)
                                .addGap(18, 18, 18)
                                .addComponent(jDateChooser2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(botaoGerarTabela))
                            .addComponent(jScrollPane1))
                        .addContainerGap())))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel1)
                        .addComponent(jLabel2))
                    .addComponent(jDateChooser1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jDateChooser2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(botaoGerarTabela))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 126, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton1)
                    .addComponent(jButton2)))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
        // TODO add your handling code here:        
        inicializarTabela();
    }//GEN-LAST:event_formWindowOpened

    private void formWindowClosed(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosed
        // TODO add your handling code here:
        TelaInicial tela = new TelaInicial();
        tela.setVisible(true);
        tela.recebeUsuario(u);
        dispose();
    }//GEN-LAST:event_formWindowClosed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        
        DefaultPieDataset data = new DefaultPieDataset();
        data.setValue("Entrada", valorEntrada);
        data.setValue("Saida", valorSaida);       
 
        JFreeChart chart = ChartFactory.createPieChart("Entrada e Saida de Movimentacoes", data, true, true, false);
 
        ChartFrame frame = new ChartFrame("JFreeChart", chart);
        frame.pack();
        frame.setVisible(true);
        
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        TelaAtualizarMovimentacao tela = new TelaAtualizarMovimentacao();
        tela.setVisible(true);
        m = u.buscar(jTable1.getSelectedRow());
        tela.recebeUsuario(u);  

        
        System.out.println(m);
        tela.recebeMovimentacao(m);
        
        System.out.println(jTable1.getSelectedRow());
    }//GEN-LAST:event_jButton2ActionPerformed

    private void botaoGerarTabelaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botaoGerarTabelaActionPerformed
        // TODO add your handling code here:
        if (jDateChooser1.getDate() == null || jDateChooser2.getDate() == null){
            JOptionPane.showMessageDialog(null, "Preencha as datas inicial e final", "Mensagem de Erro", JOptionPane.ERROR_MESSAGE);
        }
        else if (jDateChooser1.getDate().compareTo(jDateChooser2.getDate()) > 0 ){
            JOptionPane.showMessageDialog(null, "A data inicial nao pode ser menor que a final", "Mensagem de Erro", JOptionPane.ERROR_MESSAGE);
        
        }
//        String dataInicial = new SimpleDateFormat("dd/MM/yyy").format(jDateChooser1.getDate());
//        String dataFinal = new SimpleDateFormat("dd/MM/yyy").format(jDateChooser2.getDate());
//        System.out.println(dataInicial.compareTo(dataFinal));
        
        else{
            inicializarTabela();
            atualizarTabela();
        }
    }//GEN-LAST:event_botaoGerarTabelaActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(TelaGerenciarFinancas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(TelaGerenciarFinancas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(TelaGerenciarFinancas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(TelaGerenciarFinancas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new TelaGerenciarFinancas().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton botaoGerarTabela;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private com.toedter.calendar.JDateChooser jDateChooser1;
    private com.toedter.calendar.JDateChooser jDateChooser2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    // End of variables declaration//GEN-END:variables

    private void inicializarTabela() {
        String titulo[] = {"Data", "Descricao", "Tipo", "Valor", "Categoria"};
        
        Object matriz[][];
        
        
            matriz = new String[1][5];
            matriz[0][0] = "";
            matriz[0][1] = "";
            matriz[0][2] = "";
            matriz[0][3] = "";
            matriz[0][4] = "";
            
        
        
        DefaultTableModel modelo = new DefaultTableModel(matriz, titulo);
        jTable1.setModel(modelo);
    }
    
    private void atualizarTabela() {
        String titulo[] = {"Data", "Descricao", "Tipo", "Valor", "Categoria"};
        
        SimpleDateFormat formatoData = new SimpleDateFormat("dd/MM/yyyy");
        String dataInicial = formatoData.format(jDateChooser1.getDate());
        String dataFinal = formatoData.format(jDateChooser2.getDate());
        
        List<Movimentacao> movimentacoes = u.getMovimentacao();
            
        
        Object matriz[][];
        
        if (movimentacoes == null){
            matriz = new String[1][5];
            matriz[0][0] = "";
            matriz[0][1] = "";
            matriz[0][2] = "";
            matriz[0][3] = "";
            matriz[0][4] = "";
            
        }
        else{
            int contaLinha = 0;
            for (int i = 0; i < movimentacoes.size(); i++){
                if (formatoData.format(u.getMovimentacao().get(i).getDataMov()).compareTo(dataInicial) >= 0 && formatoData.format(u.getMovimentacao().get(i).getDataMov()).compareTo(dataFinal) <= 0){
                    contaLinha++;
                    if(u.getMovimentacao().get(i).getTipo().equals("Entrada")){
                        valorEntrada += u.getMovimentacao().get(i).getValor();
                    }else{
                        valorSaida += u.getMovimentacao().get(i).getValor();
                    }
                    
                    System.out.println(contaLinha);
                }
            }
            matriz = new Object[contaLinha][5];
            int cont = 0;
            for (int i = 0; i < movimentacoes.size(); i++){
                if (formatoData.format(u.getMovimentacao().get(i).getDataMov()).compareTo(dataInicial) >= 0 && formatoData.format(u.getMovimentacao().get(i).getDataMov()).compareTo(dataFinal) <= 0){
                    Movimentacao mov = movimentacoes.get(cont);
                    matriz[i][0] = formatoData.format(mov.getDataMov());
                    matriz[i][1] = mov.getDescricao();
                    matriz[i][2] = mov.getTipo();
                    matriz[i][3] = mov.getValor();
                    matriz[i][4] = mov.getCategoria();
                    ++cont;
                }
                
            }
        }
        
        DefaultTableModel modelo = new DefaultTableModel(matriz, titulo);
        jTable1.setModel(modelo);
    }

    public void recebeUsuario(Usuario u) {
        this.u = u;
        
    }
}
